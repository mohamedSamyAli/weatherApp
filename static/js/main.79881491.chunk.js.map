{"version":3,"sources":["Components/MapComponent/MapComponent.js","Components/MapComponent/maping.js","Helpers.js","Components/SearchComponent/SearchComponent.js","Components/SearchComponent/maping.js","App.js","reducer.js","index.js"],"names":["MapComponent","fill","Fill","color","stroke","Stroke","width","style","Style","vectorSource","VectorSource","layer","VectorLayer","source","map","Map","target","layers","TileLayer","XYZ","url","view","View","projection","center","zoom","this","props","setvectorSource","setmap","className","id","Component","connect","dispatch","e","type","value","axios","require","Option","Select","SearchComponent","handleSearch","setState","data","allData","filter","properties","NAME","toLowerCase","indexOf","slice","handleChange","handelSelect","coor","poly","Polygon","state","geometry","coordinates","clear","feature","Feature","name","text","addFeature","extent","getGeometry","getExtent","getView","fit","DrawPolygon","reduce","a","b","length","get","then","re","WeatherData","temp","description","weather","undefined","disabled","features","options","d","i","key","showSearch","placeholder","onSelect","defaultActiveFirstOption","filterOption","onSearch","onChange","image","Empty","PRESENTED_IMAGE_SIMPLE","App","height","span","initialState","reducer","action","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79881491.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport \"./style.css\"\r\nimport View from 'ol/View';\r\nimport Map from 'ol/Map';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport XYZ from 'ol/source/XYZ';\r\nimport{mapDispatchToProps}from\"./maping\"\r\nimport{connect}from \"react-redux\"\r\nimport VectorLayer from 'ol/layer/Vector';\r\nimport VectorSource from 'ol/source/Vector';\r\nimport {Fill, Stroke, Style} from 'ol/style';\r\n\r\n\r\n class MapComponent extends Component {\r\n\r\n\r\n    //other functions eliminated for brevity\r\n    componentDidMount() {\r\n\r\n\r\n        let fill = new Fill({\r\n            color: 'rgba(78, 250, 47,0.4)'\r\n          });\r\n          var stroke = new Stroke({\r\n            color: '#ffff66',\r\n            width: 2.5\r\n          });\r\n          let style = \r\n            new Style({\r\n              fill: fill,\r\n              stroke: stroke\r\n            })\r\n          \r\n\r\n\r\n        let vectorSource = new VectorSource({})\r\n        let layer = new VectorLayer({\r\n            source: vectorSource,\r\n            style\r\n        });\r\n        var map = new Map({\r\n            target: 'map',\r\n            layers: [\r\n              new TileLayer({\r\n                source: new XYZ({\r\n                  url: 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n                })\r\n              }),layer\r\n            ],\r\n            view: new View({\r\n                projection:'EPSG:4326',\r\n              center: [0, 0],\r\n              zoom: 3\r\n            })\r\n          });\r\n          this.props.setvectorSource(vectorSource)\r\n           this.props.setmap(map)\r\n     }\r\n  \r\n    \r\nrender () {\r\n    return (<div className=\"map\" id=\"map\"> </div>);\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default connect(null,mapDispatchToProps)(MapComponent)","\r\n  export const mapDispatchToProps = dispatch => {\r\n    return {\r\n        setmap: (e) => dispatch({type:'setMap',value:e}),       \r\n        setvectorSource: (e) => dispatch({type:'setvectorSource',value:e}),       \r\n  };}","import * as olProj from 'ol/proj';\r\nimport { Feature } from 'ol';\r\nconst axios = require('axios')\r\nexport const ToMapProj = (coorArray)=>{\r\n    return coorArray.map(e=>olProj.transform(e,'EPSG:4326', 'EPSG:3857'))\r\n}\r\n\r\n\r\nexport const getWeatherData = (center)=>{\r\n   return axios.get(`https://api.weatherbit.io/v2.0/current?lat=${center[1]}&lon=${center[0]}&key=6e693d96fdc844c297b4a96e00c6eb89`).then(e=>{\r\n        return e.data\r\n    })\r\n}\r\n\r\n\r\n \r\nexport const getCenter = (coor)=>{\r\n    let lat  = (coor.map(e=>e[0]).reduce((a, b) => a + b, 0))/coor.length\r\n    let long = (coor.map(e=>e[1]).reduce((a, b) => a + b, 0))/coor.length\r\n    return [lat,long]\r\n}\r\n\r\nexport const DrawPolygon = (map,vectorSource,poly)=>{\r\n    vectorSource.clear();\r\n    var feature = new Feature({\r\n        name: \"poly\",\r\n        geometry: poly,\r\n        text:\"SMSM SMSM SMSM\"\r\n    });\r\n    vectorSource.addFeature( feature );\r\n    \r\n    let extent = feature.getGeometry().getExtent() \r\n    map.getView().fit([extent[0]-1,extent[1]-1,extent[2]+1,extent[3]+1])\r\n}","import React, { Component } from 'react'\r\nimport { Select, Card ,Empty } from 'antd';\r\nimport{mapStateToProps}from\"./maping\"\r\nimport{connect}from \"react-redux\"\r\nimport { DrawPolygon ,getCenter ,getWeatherData} from '../../Helpers'\r\nimport \"./style.css\"\r\nimport Polygon from 'ol/geom/Polygon';\r\nlet axios = require('axios')\r\nconst { Option } = Select;\r\n\r\n class SearchComponent extends Component {\r\n\r\nconstructor(props){\r\n    super(props)\r\n    this.allData = []\r\n    this.state = {\r\n        data: [],\r\n        value: undefined,\r\n        disabled:true,\r\n        WeatherData:null\r\n      };\r\n\r\n}\r\n\r\n\r\nhandleSearch = value => {\r\n    if (value) {\r\n        this.setState({data:this.allData.filter(e=>{\r\n          return  e.properties.NAME && e.properties.NAME.toLowerCase().indexOf(value.toLowerCase())>=0\r\n        }\r\n        ).slice(0,100)\r\n    })\r\n    } else {\r\n      this.setState({ data: [] });\r\n    }\r\n  };\r\n\r\nhandleChange = value => {\r\n    this.setState({ value });\r\n  };\r\n  \r\n  handelSelect=(e)=>{\r\n    let poly = new Polygon([this.state.data[e].geometry.coordinates[0].slice(1)])\r\n  DrawPolygon(this.props.map,this.props.vectorSource,poly)\r\n  getWeatherData(getCenter(this.state.data[e].geometry.coordinates[0].slice(1))).then(re=>{\r\n    this.setState({WeatherData:{temp:re.data[0].temp,description:re.data[0].weather.description}})\r\n  })\r\n  }\r\n\r\n    componentDidMount(){\r\n      axios.get(\"https://raw.githubusercontent.com/drei01/geojson-world-cities/master/cities.geojson\").then(e=>{\r\n        this.allData = e.data.features\r\n        this.setState({disabled:false})\r\n        \r\n})\r\n\r\n    }\r\n\r\n    render() {\r\n      let {WeatherData} = this.state;\r\n        const options =this.state.data.map((d,i) => <Option key={i}>{d.properties.NAME}</Option>);\r\n        return (\r\n            <div className=\"Select\">\r\n              <div>Search For country:</div>\r\n        <Select\r\n        disabled={this.state.disabled}\r\n         showSearch\r\n         value={this.state.value}\r\n         placeholder=\"type here to search\"\r\n         style={{width:\"100%\"}}\r\n         onSelect={this.handelSelect}\r\n         defaultActiveFirstOption={false}\r\n         filterOption={false}\r\n         onSearch={this.handleSearch}\r\n         onChange={this.handleChange}\r\n      >\r\n        {options}\r\n      </Select>\r\n      <Card style={{ width:\"100%\"}}>\r\n      {\r\n    WeatherData?(<>\r\n    <div className=\"tempText\">{WeatherData.temp}°</div>\r\n    <div>{WeatherData.description}</div>\r\n    </>\r\n    ):<Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n  } \r\n      </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,null)(SearchComponent)","export const mapStateToProps = state => {\r\n    return {\r\n        map:state.map  ,\r\n        vectorSource:state.vectorSource\r\n  };\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport MapComponent from './Components/MapComponent/MapComponent'\nimport SearchComponent from './Components/SearchComponent/SearchComponent'\nimport { Row, Col } from 'antd';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Row style={{height:\"100%\"}}>\n    <Col span=\"4\">\n      <SearchComponent/>\n    </Col>\n    <Col span=\"20\" style={{height:\"100%\"}}>\n      <MapComponent/>\n    </Col>\n      </Row>\n    </div>\n  );\n}\nexport default App;\n","const initialState = {\r\n    map:null,\r\n    vectorSource:null \r\n  };\r\n  \r\n  const reducer = ( state = initialState, action ) => {\r\n      switch ( action.type ) {\r\n          case 'setMap':\r\n              return {\r\n                  ...state,\r\n                  map:action.value\r\n              }\r\n              case 'setvectorSource':\r\n              return {\r\n                  ...state,\r\n                  vectorSource:action.value\r\n              }\r\n                  default: return state\r\n              }    \r\n  };\r\n  \r\n  export default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'antd/dist/antd.css';\nimport { Provider } from \"react-redux\";\nimport {createStore} from \"redux\"\nimport reducer from \"./reducer\"\n\nconst store = createStore(reducer)\n\nReactDOM.render(<Provider store={store}> <App/> </Provider>, document.getElementById('root'));\n"],"sourceRoot":""}